name: Fetch Poem from Dify & Save to Notion

on:
  schedule:
    - cron: "0 12 * * *"  # Runs every day at 12 PM UTC
  workflow_dispatch:  # Allows manual triggering from GitHub Actions UI

jobs:
  run-dify-and-save:
    runs-on: ubuntu-latest
    steps:
      - name: Call Dify Workflow
        id: get_poem
        run: |
          RESPONSE=$(curl -X POST 'https://dify.kn.ly/v1/workflows/run' \
            --header "Authorization: Bearer ${{ secrets.DIFY_API_KEY }}" \
            --header "Content-Type: application/json" \
            --data-raw '{
                "inputs": {},
                "response_mode": "blocking",
                "user": "automation_script"
              }')
          
          echo "Raw API Response: $RESPONSE"  # Debugging step
          
          POEM=$(echo "$RESPONSE" | jq -r '.data.outputs' || echo "Error: No valid output")
          
          # Safely set the multiline 'poem' environment variable using the heredoc syntax
          echo "poem<<EOF" >> $GITHUB_ENV
          echo "$POEM" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Save Poem to Notion
        run: |
          curl -X POST "https://api.notion.com/v1/pages" \
          -H "Authorization: Bearer ${{ secrets.NOTION_API_KEY }}" \
          -H "Content-Type: application/json" \
          -H "Notion-Version: 2022-06-28" \
          -d '{
            "parent": { "database_id": "'"${{ secrets.NOTION_DATABASE_ID }}"'" },
            "properties": {
              "Title": { "title": [{ "text": { "content": "Statement" }}] },
              "Date": { "date": { "start": "'"$(date -u +%Y-%m-%d)"'" }},
              "Content": { "rich_text": [{ "text": { "content": "'"$poem"'" }}] }
            }
          }'
